name: Build platform image

on: 
    push:
        branches: [ dev ]
        paths:
            - 'vc-platform-image/**'

    pull_request:
        branches: [ master ]
        paths:
            - 'vc-platform-image/**'
  
jobs:
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2

      - name: Cache jq
        uses: actions/cache@v2
        id: cache-jq
        with:
            path: "~/jq"
            key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Install jq
        env:
          CACHE_HIT: ${{steps.cache-jq.outputs.cache-hit}}
        run: |
            if [[ "$CACHE_HIT" == 'true' ]]; then
              sudo cp --verbose --force --recursive ~/jq/* /
            else
              sudo apt-get install jq
              mkdir -p ~/jq
              sudo dpkg -L jq | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/jq/
            fi

      - name: Get platfrom version
        id: platform-version
        run: |
            echo "PLATFORM_VERSION=$(cat ./vc-platform-image/vc-package.json | jq -r '.PlatformVersion')"

      - name: What is platfrom version
        run: |
            echo "Platform version is $PLATFORM_VERSION"

      # - name: Docker Login
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: ghcr.io
      #     username: $GITHUB_ACTOR
      #     password: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Build and Publish Docker Image
      #   shell: pwsh
      #   run: |
      #       $imageTag = "ghcr.io/$('${{ github.repository }}'.ToLower())/vc-platform-image:stable"
      #       docker build ${{ github.workspace }}/vc-platform-image --tag $imageTag
      #       docker push $imageTag